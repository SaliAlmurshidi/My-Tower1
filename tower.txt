-- MySQL Script generated by MySQL Workbench
-- Wed Mar 28 21:34:37 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tower
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tower
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tower` DEFAULT CHARACTER SET utf8 ;
USE `tower` ;

-- -----------------------------------------------------
-- Table `tower`.`User_Types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`User_Types` (
  `User_Type_ID` INT NOT NULL,
  `User_Type_Name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`User_Type_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Users` (
  `Phone_Number` VARCHAR(100) NULL,
  `Address` VARCHAR(100) NULL,
  `User_ID` INT NOT NULL,
  `Password` VARCHAR(120) NOT NULL,
  `Notes` VARCHAR(250) NULL,
  `User_Type_ID` INT NOT NULL,
  PRIMARY KEY (`User_ID`, `User_Type_ID`),
  INDEX `fk_Users_User_Types1_idx` (`User_Type_ID` ASC),
  CONSTRAINT `fk_Users_User_Types1`
    FOREIGN KEY (`User_Type_ID`)
    REFERENCES `tower`.`User_Types` (`User_Type_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Currency_Type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Currency_Type` (
  `Currency_Type_ID` INT NOT NULL,
  `Currency_Type_Name` VARCHAR(100) NULL,
  PRIMARY KEY (`Currency_Type_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Requirement_Types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Requirement_Types` (
  `Requirement_Type_ID` INT NOT NULL,
  `Requirement_Type_Name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`Requirement_Type_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Requirements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Requirements` (
  `Requirement_ID` INT NOT NULL,
  `Requirement_Name` VARCHAR(100) NOT NULL,
  `Periodic` VARCHAR(100) NULL,
  `Start_Date` DATETIME(6) NULL,
  `Requirement_Type_ID` INT NOT NULL,
  PRIMARY KEY (`Requirement_ID`, `Requirement_Type_ID`),
  INDEX `fk_Requirements_Requirement_Types1_idx` (`Requirement_Type_ID` ASC),
  CONSTRAINT `fk_Requirements_Requirement_Types1`
    FOREIGN KEY (`Requirement_Type_ID`)
    REFERENCES `tower`.`Requirement_Types` (`Requirement_Type_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Accounts` (
  `Account_ID` INT NOT NULL,
  `Value` DOUBLE NULL,
  `Currency_Type_ID` INT NOT NULL,
  `Requirement_ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  `to_account` INT NULL,
  `from_account` INT NULL,
  PRIMARY KEY (`Account_ID`, `Currency_Type_ID`, `Requirement_ID`, `User_ID`),
  INDEX `fk_Accounts_Currency_Type1_idx` (`Currency_Type_ID` ASC),
  INDEX `fk_Accounts_Requirements1_idx` (`Requirement_ID` ASC),
  INDEX `fk_Accounts_Users1_idx` (`User_ID` ASC),
  CONSTRAINT `fk_Accounts_Currency_Type1`
    FOREIGN KEY (`Currency_Type_ID`)
    REFERENCES `tower`.`Currency_Type` (`Currency_Type_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Accounts_Requirements1`
    FOREIGN KEY (`Requirement_ID`)
    REFERENCES `tower`.`Requirements` (`Requirement_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Accounts_Users1`
    FOREIGN KEY (`User_ID`)
    REFERENCES `tower`.`Users` (`User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Groups` (
  `Group_ID` INT NOT NULL,
  `Group_Name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`Group_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Groups_Requirements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Groups_Requirements` (
  `price` DOUBLE NULL,
  `Group_ID` INT NOT NULL,
  `Requirement_ID` INT NOT NULL,
  PRIMARY KEY (`Group_ID`, `Requirement_ID`),
  INDEX `fk_Groups_Requirements_Groups1_idx` (`Group_ID` ASC),
  INDEX `fk_Groups_Requirements_Requirements1_idx` (`Requirement_ID` ASC),
  CONSTRAINT `fk_Groups_Requirements_Groups1`
    FOREIGN KEY (`Group_ID`)
    REFERENCES `tower`.`Groups` (`Group_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Groups_Requirements_Requirements1`
    FOREIGN KEY (`Requirement_ID`)
    REFERENCES `tower`.`Requirements` (`Requirement_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Operations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Operations` (
  `Operation_ID` INT NOT NULL,
  `Operation_Name` VARCHAR(100) NULL,
  PRIMARY KEY (`Operation_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Transaction` (
  `Transaction_ID` INT NOT NULL,
  `Credit` DOUBLE NULL,
  `Withdraw` DOUBLE NULL,
  `Factor` DOUBLE NULL,
  `Notes` VARCHAR(100) NULL,
  `Operation_ID` INT NOT NULL,
  `Account_ID` INT NOT NULL,
  `Date` DATETIME(6) NULL,
  PRIMARY KEY (`Transaction_ID`, `Operation_ID`, `Account_ID`),
  INDEX `fk_Transaction_Operations1_idx` (`Operation_ID` ASC),
  INDEX `fk_Transaction_Accounts1_idx` (`Account_ID` ASC),
  CONSTRAINT `fk_Transaction_Operations1`
    FOREIGN KEY (`Operation_ID`)
    REFERENCES `tower`.`Operations` (`Operation_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transaction_Accounts1`
    FOREIGN KEY (`Account_ID`)
    REFERENCES `tower`.`Accounts` (`Account_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tower`.`Groups_Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tower`.`Groups_Users` (
  `Group_ID` INT NOT NULL,
  `User_ID` INT NOT NULL,
  PRIMARY KEY (`Group_ID`, `User_ID`),
  INDEX `fk_Groups_has_Users_Users1_idx` (`User_ID` ASC),
  INDEX `fk_Groups_has_Users_Groups1_idx` (`Group_ID` ASC),
  CONSTRAINT `fk_Groups_has_Users_Groups1`
    FOREIGN KEY (`Group_ID`)
    REFERENCES `tower`.`Groups` (`Group_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Groups_has_Users_Users1`
    FOREIGN KEY (`User_ID`)
    REFERENCES `tower`.`Users` (`User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
